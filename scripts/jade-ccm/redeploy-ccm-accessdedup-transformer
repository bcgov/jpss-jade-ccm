ns_set="cef5dd"

if [ "$1" = "dev" ]; then
    env="dev"
elif [ "$1" = "test" ]; then
    env="test"
elif [ "$1" = "prod" ]; then
    env="prod"
elif [ "$1" = "local" ]; then
    env="local"
else
    env=""
fi

if [ "$env" = "" ]; then
   echo "Error.  Invalid environment specified: $1"
   exit 1
else
   ns="$ns_set-$env"
fi

# Set default logging level
logging_level="INFO"

if [ "$env" = "prod" ]; then
    echo "WARNING:  You are about to deploy to PRODUCTION.  Are you sure? (y/n)"
    read answer
    if [ "$answer" != "y" ]; then
        echo "Aborting deployment."
        ns=""
        exit 1
    fi

    # Set prod logging level to INFO
    logging_level="INFO"
else
    # Keep dev/test/local logging level to default
fi

if [ "$env" != "local" ]; then
    echo "Deploying to $ns not supported yet.  Aborting deployment."
    exit 1
fi

# Remove the existing transformer

docker stop ccm-accessdedup-transformer
docker rm ccm-accessdedup-transformer
docker rmi ccm-accessdedup-transformer

# Deploy the transformer

pushd ../../ccm-accessdedup-transformer

mvn clean package -Dquarkus.package.type=uber-jar -Dquarkus.log.level=$logging_level

docker build -t ccm-accessdedup-transformer -f Dockerfile .
docker run --name ccm-accessdedup-transformer --network jade-events_default -d ccm-accessdedup-transformer

popd

