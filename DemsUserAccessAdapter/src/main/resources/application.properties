## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

# https://camel.apache.org/components/3.18.x/http-component.html#_configuring_component_options
camel.component.http.connect-timeout = 10000
camel.component.http.connection-request-timeout = 10000
camel.component.http.socket-timeout = 30000
camel.component.http.connection-time-to-live = 0
quarkus.http.access-log.enabled=true
quarkus.profile=PROD



#DEMS Config

//dems.token = {{secret:ccm-secrets-useraccess-adapter/dems-adapter-security-token}}
dems.token=test token
dems-host-url=wsgw.dev.jag.gov.bc.ca/bcpsdems/api/v1
#dems.url=${dems-host-url}
dems.host = wsgw.dev.jag.gov.bc.ca/bcpsdems/api/v1
#dems.host ={quarkus.openshift.env.secrets}
#dems.casetemplate.id = {{configmap:config-volume/dems-case-template-id}}
#dems.casedefaultgroup.id = {{configmap:config-volume/dems-case-default-group-id}}
#dems.org-unit.id = {{configmap:config-volume/dems-org-unit-id}}
#dems.case.auto.creation = {{configmap:config-volume/dems-case-auto-creation}}

#END DEMS

# Kafka topic names
#NOTIFICATION CONFIG
kafka.topic.chargeassessments.name = ccm-chargeassessments
kafka.topic.courtcases.name = ccm-courtcases
kafka.topic.courtcase-errors.name = ccm-courtcase-errors
kafka.topic.caseusers.name = ccm-caseusers
kafka.topic.audit.name = ccm-audit

#END CONFIG
#GENERAL CONFIG
quarkus.application.name=ccm-dems-useraccess-adapter
quarkus.openshift.container-name=dems-useraccess-adapter

kafka.topic.kpis.name = ccm-kpis
camel.component.kafka.brokers = events-kafka-bootstrap:9001

#accessing config maps and secrets, putting into env
#quarkus.openshift.env.configmaps=ccm-configs
#quarkus.openshift.env.secrets=ccm-secrets-useraccess-adapter

#quarkus.openshift.app-secret=ccm-secrets-useraccess-adapter
quarkus.openshift.app-config-map=ccm-configs

#mount volumes
#quarkus.openshift.mounts.ccm-configs.path=/etc/camel-config/ccm-configs
#quarkus.openshift.mounts.ccm-secrets.path=/etc/camel-config/ccm-secrets-useraccess-adapter

#quarkus.openshift.secret-volumes.ccm-secrets.secret-name=ccm-secrets-useraccess-adapter
#quarkus.openshift.config-map-volumes.ccm-configs.config-map-name=ccm-configs

#reference in camel

#camel.kubernetes-config.mount-path-secrets = /etc/camel-config/ccm-secrets-useraccess-adapter
#camel.kubernetes-config.mount-path-configmaps =/etc/camel-config/ccm-configs



#kafa topics config
kafka.topic.general-errors.name = ccm-general-errors
kafka.topic.chargeassessment-errors.name = ccm-chargeassessment-errors
kafka.topic.caseuser-errors.name = ccm-caseuser-errors

httpclient.wire.header.level=FINEST
org.apache.commons.httpclient.level=FINEST


#quarkus.log.file.enable = true
#quarkus.log.file.level = TRACE
# How often should the messages be generated and pushed to Kafka Topic
timer.period = 10000
timer.delay = 10000
#END GENERAL CONFIG

#QUARKUS CONFIG
#expose the service while deployment to openshift
quarkus.openshift.expose=true

# Uncomment to trust self signed certificates if they are presented by the Kubernetes API server
#quarkus.kubernetes-client.trust-certs=true

# The build strategy to use
quarkus.container-image.builder=jib

# Uncomment to set resource limits
quarkus.openshift.resources.requests.memory=64Mi
quarkus.openshift.resources.requests.cpu=25m
quarkus.openshift.resources.limits.memory=512Mi
quarkus.openshift.resources.limits.cpu=1000m

# using QuarkusTestResourceLifecycleManager in this test
quarkus.kafka.devservices.enabled=false

quarkus.log.level=DEBUG

quarkus.log.min-level=DEBUG