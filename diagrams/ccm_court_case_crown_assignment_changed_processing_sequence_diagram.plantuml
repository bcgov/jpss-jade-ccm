@startuml
'hide footbox

skinparam Shadowing true
skinparam CollectionsBackgroundColor Lavender
skinparam ControlBackgroundColor LightSkyBlue
skinparam BoundaryBackgroundColor LightGrey

/' 
Available colours
https://plantuml-documentation.readthedocs.io/en/latest/formatting/color-names.html
'/

boundary j_interface as "JUSTIN Interface"
control j_adapter as "JUSTIN Out Adapter"
collections court_case_topic as "Court Case Events"
collections kpis_topic as "Event KPIs"
control notification_service as "Notification Service"
control lookup_service as "Lookup Service"
control d_adapter as "DEMS Adapter"
boundary d_interface as "DEMS Interface"

title
Court Case CROWN_ASSIGNMENT_CHANGED (CR) Event Processing Sequence Diagram
end title

autonumber

court_case_topic o-> notification_service: Process CROWN_ASSIGNMENT_CHANGED event
activate notification_service

notification_service ->o kpis_topic: Publish 'processing started' event KPI

notification_service -> lookup_service: Call /getCourtCaseCrownAssignmentList
activate lookup_service
lookup_service -> j_adapter: Retrieve crown assignment details from JUSTIN

activate j_adapter
j_adapter -> j_adapter: Convert data from Business to System (JUSTIN) model
j_adapter -> j_interface: Call getCrownAssignments()
activate j_interface
j_interface --> j_adapter: Crown assignment details
deactivate j_interface
j_adapter -> j_adapter: Convert data from System (JUSTIN) to Business model
j_adapter --> lookup_service: Court case crown assignment list
deactivate j_adapter

lookup_service --> notification_service: Result of getCourtCaseCrownAssignmentList
deactivate lookup_service

notification_service -> lookup_service: Retrieve court case metadata details
activate lookup_service
lookup_service -> j_adapter: Retrieve court case metadata details from JUSTIN

activate j_adapter
j_adapter -> j_adapter: Convert data from Business to System (JUSTIN) model
j_adapter -> j_interface: Call getCourtFile()
activate j_interface
j_interface --> j_adapter: Court file details
deactivate j_interface
j_adapter -> j_adapter: Convert data from System (JUSTIN) to Business model
j_adapter --> lookup_service: Court case metadata details
deactivate j_adapter

lookup_service --> notification_service: Court case metadata details
deactivate lookup_service

loop For every related court case

    notification_service -> lookup_service: Check case exists
    activate lookup_service
    note over lookup_service, d_adapter
    Integration assumption: DEMS is the system-of-record
    for whether a court case already exists or not
    end note
    lookup_service -> d_adapter: Check case existence in DEMS
    activate d_adapter
    d_adapter -> d_adapter: Convert data from Business to System (DEMS) model
    d_adapter -> d_interface: Check case existence in DEMS
    activate d_interface

    break Case not found - end processing
    d_interface --> d_adapter: Case not found
    deactivate d_interface
    d_adapter --> lookup_service: Case not found
    lookup_service --> notification_service: Case not found
    deactivate lookup_service
    deactivate d_adapter
    end break

    notification_service -> d_adapter: Call /updateCourtCaseWithAppearanceSummary
    activate d_adapter

    d_adapter -> d_adapter: Convert data from Business to System (DEMS) model

    d_adapter -> d_interface: Update court case
    activate d_interface

    d_interface --> d_adapter: Updated
    deactivate d_interface

    d_adapter --> notification_service: Updated
    deactivate d_adapter

end

notification_service ->o kpis_topic: Publish 'processing completed' event KPI

deactivate notification_service

caption
Prepared by David Agahchen | Updated February 7, 2024
end caption
@enduml