@startuml
'hide footbox

skinparam Shadowing true
skinparam CollectionsBackgroundColor Lavender
skinparam ControlBackgroundColor LightSkyBlue
skinparam BoundaryBackgroundColor LightGrey

/' 
Available colours
https://plantuml-documentation.readthedocs.io/en/latest/formatting/color-names.html
'/

boundary j_interface as "JUSTIN Interface"
control j_adapter as "JUSTIN Adapter"
collections court_cases_topic as "Charge Assessment Case Events"
control notification_service as "Notification Service"
control lookup_service as "Lookup Service"
control d_adapter as "DEMS Adapter"
boundary d_interface as "DEMS Interface"

title
CCM Charge Assessment Case UPDATED Event Processing Sequence Diagram
end title

autonumber

court_cases_topic o-> notification_service : Process UPDATED event
activate notification_service
notification_service -> lookup_service: Retrieve court case details
activate lookup_service
lookup_service -> j_adapter: Retrieve court case details from JUSTIN

activate j_adapter
j_adapter -> j_adapter: Convert data from Business to System (JUSTIN) model
j_adapter -> j_interface: Call getAgencyFile()
activate j_interface
j_interface --> j_adapter: Agency file details
deactivate j_interface
j_adapter -> j_adapter: Convert data from System (JUSTIN) to Business model
j_adapter --> lookup_service: Court case details
deactivate j_adapter

lookup_service --> notification_service: Court case details
deactivate lookup_service

notification_service -> lookup_service:  Check case status exists
activate lookup_service

lookup_service -> d_adapter:  Check case status existence in DEMS
activate d_adapter
d_adapter -> d_adapter:  Convert data from Business to System (DEMS) model

d_adapter -> d_interface:  Call getCourtCaseStatusExists()
activate d_interface

d_interface --> d_adapter: Response
deactivate d_interface
d_adapter --> lookup_service: Response
deactivate d_adapter
lookup_service --> notification_service: Response
deactivate lookup_service
alt Inactive status DEMS case
    notification_service -> notification_service: No operation end processing.
else Existing court case
notification_service -> d_adapter: Update court case

activate d_adapter
d_adapter -> d_adapter: Convert data from Business to System (DEMS) model

d_adapter -> d_interface: Retrieve DEMS case data
activate d_interface
d_interface --> d_adapter: DEMS case data
deactivate d_interface 

d_adapter -> d_adapter: Derive the K value for the case flags field
d_adapter -> d_interface: Update case in DEMS
activate d_interface
d_interface --> d_adapter: Updated
deactivate d_interface

loop For every accused partipant
    d_adapter -> d_interface: Check if participant exists
    activate d_interface
    d_interface --> d_adapter: participant id if exists
    deactivate d_interface
    alt New participant
        d_adapter -> d_interface: Create new participant
        activate d_interface
        d_interface --> d_adapter: Created
        deactivate d_interface
    else Existing participant
        d_adapter -> d_interface: Update existing participant
        activate d_interface
        d_interface --> d_adapter: Updated
        deactivate d_interface
    end
    d_adapter -> d_interface: Add participant to case
    activate d_interface
    d_interface --> d_adapter: Acknowledged
    deactivate d_interface
end

d_adapter --> notification_service: Updated
deactivate d_adapter

notification_service -> lookup_service: Retrieve court case authorized user list
activate lookup_service
lookup_service -> j_adapter: Retrieve court case authorized user list from JUSTIN

activate j_adapter
j_adapter -> j_adapter: Convert data from Business to System (JUSTIN) model
j_adapter -> j_interface: Call getAuthUsers()
activate j_interface
j_interface --> j_adapter: Auth user list details
deactivate j_interface
j_adapter -> j_adapter: Convert data from System (JUSTIN) to Business model
j_adapter --> lookup_service: Auth user list details
deactivate j_adapter

lookup_service --> notification_service: Auth user list details details
deactivate lookup_service

notification_service -> d_adapter: Sync caes users
activate d_adapter
d_adapter -> d_adapter: Convert data from Business to System (DEMS) model
d_adapter -> d_interface: Sync case users in DEMS
activate d_interface
d_interface --> d_adapter: Acknowledged
deactivate d_interface

d_adapter --> notification_service: Acknowledged
deactivate d_adapter

notification_service -> d_adapter: Sync case group members
activate d_adapter
d_adapter -> d_adapter: Convert data from Business to System (DEMS) model
d_adapter -> d_interface: Retrieve case-specific group name / id list
activate d_interface
d_interface --> d_adapter: Case-specific user group name / id list
deactivate d_interface
loop For every case-specific user group
    d_adapter -> d_interface: Sync case group members in DEMS
    activate d_interface
    d_interface --> d_adapter: Acknowledged
    deactivate d_interface
end
d_adapter --> notification_service: Acknowledged
deactivate d_adapter

deactivate notification_service
end

caption
Prepared by David Agahchen | Updated July 16, 2023
end caption
@enduml