@startuml
'hide footbox
participant j_interface as "JUSTIN Interface"
participant j_adapter as "JUSTIN Adapter"
collections approved_court_case_topic as "Approved Court Case Events"
participant notification_service as "Notification Service"
participant lookup_service as "Case Lookup Service"
participant d_adapter as "DEMS Adapter"
participant d_interface as "DEMS Interface"

title
CCM Approved Court Case CHANGED Event Processing Sequence Diagram
end title

autonumber

approved_court_case_topic o-> notification_service: Process Approved Court CAse CHANGED event
activate notification_service

notification_service -> lookup_service: Retrieve Approved Court CAse details
activate lookup_service
lookup_service -> j_adapter: Retrieve Approved Court CAse details from JUSTIN

activate j_adapter
j_adapter -> j_adapter: Convert data from Business to System (JUSTIN) model
j_adapter -> j_interface: Call getCourtFile()
activate j_interface
j_interface --> j_adapter: Court file details
deactivate j_interface
j_adapter -> j_adapter: Convert data from System (JUSTIN) to Business model
j_adapter --> lookup_service: Approved Court CAse details
deactivate j_adapter

lookup_service --> notification_service: Approved Court CAse details
deactivate lookup_service

notification_service -> d_adapter: Update court case
activate d_adapter
d_adapter -> d_adapter: Convert data from Business to System (DEMS) model
d_adapter -> d_interface: Update case in DEMS
activate d_interface
d_interface --> d_adapter: Updated
deactivate d_interface

loop For every accused partipant
    d_adapter -> d_interface: Check if participant exists
    activate d_interface
    d_interface --> d_adapter: participant id if exists
    deactivate d_interface
    alt New participant
        d_adapter -> d_interface: Create new participant
        activate d_interface
        d_interface --> d_adapter: Created
        deactivate d_interface
    else Existing participant
        d_adapter -> d_interface: Update existing participant
        activate d_interface
        d_interface --> d_adapter: Updated
        deactivate d_interface
    end
    d_adapter -> d_interface: Add participant to case
    activate d_interface
    d_interface --> d_adapter: Acknowledged
    deactivate d_interface
end

d_adapter --> notification_service: Updated

deactivate d_adapter

deactivate notification_service

caption
Prepared by David Agahchen | Updated October 17, 2022
end caption
@enduml