@startuml
'hide footbox

participant j_interface as "JUSTIN Interface"
participant j_adapter as "JUSTIN Adapter"
collections approved_court_cases_topic as "Approved Court Case Events"
participant notification_service as "Notification Service"
participant lookup_service as "Lookup Service"
participant d_adapter as "DEMS Adapter"
participant d_interface as "DEMS Interface"

title
CCM Approved Court Case APPEARANCE_CHANGED Event Processing Sequence Diagram
end title

autonumber

approved_court_cases_topic o-> notification_service: Process APPEARANCE_CHANGED event
activate notification_service

notification_service -> lookup_service: Check case exists
activate lookup_service
note over lookup_service, d_adapter
Integration assumption: DEMS is the system-of-record
for whether a court case already exists or not
end note
lookup_service -> d_adapter: Check case existence in DEMS
activate d_adapter
d_adapter -> d_adapter: Convert data from Business to System (DEMS) model
d_adapter -> d_interface: Check case existence in DEMS
activate d_interface

break Case not found - end processing
d_interface --> d_adapter: Case not found
deactivate d_interface
d_adapter --> lookup_service: Case not found
lookup_service --> notification_service: Case not found
deactivate lookup_service
deactivate d_adapter
end break

notification_service -> lookup_service: Call /getCourtCaseAppearanceSummaryList
activate lookup_service
lookup_service -> j_adapter: Retrieve court court apperance details from JUSTIN

activate j_adapter
j_adapter -> j_adapter: Convert data from Business to System (JUSTIN) model
j_adapter -> j_interface: Call getAppearance()
activate j_interface
j_interface --> j_adapter: Appearance details
deactivate j_interface
j_adapter -> j_adapter: Convert data from System (JUSTIN) to Business model
j_adapter --> lookup_service: Court case appearance summary list
deactivate j_adapter

lookup_service --> notification_service: Result of getCourtCaseAppearanceSummaryList
deactivate lookup_service

notification_service -> lookup_service: Retrieve court case metadata details
activate lookup_service
lookup_service -> j_adapter: Retrieve court case metadata details from JUSTIN

activate j_adapter
j_adapter -> j_adapter: Convert data from Business to System (JUSTIN) model
j_adapter -> j_interface: Call getCourtFile()
activate j_interface
j_interface --> j_adapter: Court file details
deactivate j_interface
j_adapter -> j_adapter: Convert data from System (JUSTIN) to Business model
j_adapter --> lookup_service: Court case metadata details
deactivate j_adapter

lookup_service --> notification_service: Court case metadata details
deactivate lookup_service

loop For every related court case
    notification_service -> d_adapter: Call /updateCourtCaseWithAppearanceSummary
    activate d_adapter

    d_adapter -> d_adapter: Convert data from Business to System (DEMS) model

    d_adapter -> d_interface: Update court case
    activate d_interface

    d_interface --> d_adapter: Updated
    deactivate d_interface

    d_adapter --> notification_service: Updated
    deactivate d_adapter

end

deactivate notification_service

caption
Prepared by David Agahchen | Updated December 1, 2022
end caption
@enduml