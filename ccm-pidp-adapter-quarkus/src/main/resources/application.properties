quarkus.kafka.devservices.enabled=false
quarkus.kafka-streams.bootstrap-servers=${KAFKA-BROKER-URL:events_broker:9093}
quarkus.kafka-streams.application-id=ccm-pidp-adapter-quarkus
quarkus.kafka-streams.topics=ccm-bulk-caseusers, ccm-bulk-caseuser-errors, ccm-bulk-chargeassessments, ccm-kpis

# JADE-Events Kafka topic names
kafka.topic.caseusers.name = ccm-caseusers
kafka.topic.bulk-caseusers.name = ccm-bulk-caseusers
kafka.topic.participant.name = ccm-participants
kafka.topic.caseuser-errors.name = ccm-caseuser-errors
kafka.topic.general-errors.name = ccm-general-errors
kafka.topic.kpis.name = ccm-kpis

# PIDP Kafka topic names
pidp.kafka.topic.usercreation.name = {{pidp-kafka-topic-usercreation-name}}
pidp.kafka.topic.processresponse.name = {{pidp-kafka-topic-processresponse-name}}
pidp.kafka.topic.participantmerge.name = {{pidp-kafka-topic-participantmerge-name}}
pidp.kafka.consumergroup.name = {{pidp-kafka-oauth-client-id}}

# PIDP Kafka consumer configuration
camel.component.kafka.brokers = {{pidp-kafka-bootstrapservers-url}}
camel.component.kafka.security-protocol = SASL_SSL
camel.component.kafka.sasl-mechanism = OAUTHBEARER
camel.component.kafka.sslKeystoreLocation = /etc/keystore/pidp-kafka-client.p12
camel.component.kafka.sslKeystorePassword = {{pidp-kafka-client.p12-password}}
camel.component.kafka.sslKeystoreType = PKCS12
camel.component.kafka.sslTruststoreLocation = /etc/keystore/pidp-kafka-server.p12
camel.component.kafka.sslTruststorePassword = {{pidp-kafka-server.p12-password}}
camel.component.kafka.sslTruststoreType = PKCS12
camel.component.kafka.sasl-jaas-config = org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required oauth.client.id='{{pidp-kafka-oauth-client-id}}' oauth.client.secret='{{pidp-kafka-oauth-client-secret}}' oauth.token.endpoint.uri='{{pidp-kafka-oauth-token-endpoint-url}}';
camel.component.kafka.additional-properties[sasl.login.callback.handler.class] = io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler

pidp-host={{pidp-host-url}}

ccm.kafka.brokers = {{kafka-broker-url}}

# PIDP API OAuth config
pidp-api-oauth-client-secret={{pidp-api-oauth-client-secret}}
pidp-api-oauth-token-endpoint-url={{pidp-api-oauth-token-endpoint-url}}
pidp-api-oauth-client-id={{pidp-api-oauth-client-id}}

# PIDP API 
pidp-api-host={{pidp-api-host}}
#camel.component.kafka.additional-properties[key.subject.name.strategy] = io.confluent.kafka.serializers.subject.RecordNameStrategy
#camel.component.kafka.additional-properties[key.deserializer.schema.registry.subject] = UserModificationEvent-key
#camel.component.kafka.additional-properties[value.subject.name.strategy] = io.confluent.kafka.serializers.subject.RecordNameStrategy
#camel.component.kafka.additional-properties[value.deserializer.schema.registry.subject] = UserModificationEvent-value

quarkus.log.level=ERROR
quarkus.log.category."processCaseUserAccountCreated".level=DEBUG
quarkus.log.category."io.quarkus".level=ERROR
quarkus.log.category."org.apache.kafka".level=ERROR
quarkus.log.console.enable=true

quarkus.camel.quartz.enabled=true
quarkus.camel.quartz.thread-count=10

quarkus.openshift.image-stream.name=ccm-pidp-adapter-quarkus

#open shift config
quarkus.openshift.app-secret=ccm-secrets
quarkus.kubernetes.secret-volumes.app-secrets.secret-name=ccm-secrets
quarkus.openshift.env.configmaps=ccm-configs
quarkus.kubernetes.config-map-volumes.my-volume.config-map-name=ccm-configs