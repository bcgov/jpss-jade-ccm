name: Deploy to OpenShift

on:
  workflow_dispatch:
    inputs:
      app:
        description: 'Select the application to deploy'
        required: true
        type: choice
        options:
          - ccm-justin-in-adapter
          - ccm-dems-adapter
          - ccm-lookup-service
          - ccm-splunk-adapter
          - ccm-accessdedup-processor
          - ccm-reports-processor
          - ccm-pidp-adapter
          - ccm-notification-service
          - ccm-justin-events-adapter

      env:
        description: 'Select the environment'
        required: true
        type: choice
        default: 'dev'
        options:
          - dev
          - test
          - prod

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.env }}

    env:
      HELM_RELEASE: ${{ github.event.inputs.app }}
      OCP_SERVER: ${{ secrets.OCP_SERVER }}
      OCP_TOKEN: ${{ secrets.OCP_TOKEN }}
      OCP_PROJECT: cef5dd-${{ github.event.inputs.env }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.0

      - name: Install oc CLI
        run: |
          curl -L https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest/openshift-client-linux.tar.gz -o oc.tar.gz
          tar -xzf oc.tar.gz
          sudo mv oc kubectl /usr/local/bin/

      - name: Login to OpenShift
        run: |
          oc login $OCP_SERVER --token=$OCP_TOKEN
          oc project $OCP_PROJECT

      - name: Build ccm-models and install to local Maven
        working-directory: ../build-install-ccm-models
        run: |
          chmod +x ./repackage-ccm-models
          ./repackage-ccm-models

      - name: Deploy ${{ github.event.inputs.app }} to ${{ github.event.inputs.env }}
        run: |
          helm upgrade --install $HELM_RELEASE ./Helm \
            --namespace $OCP_PROJECT \
            --create-namespace \
            -f Helm/values-${{ github.event.inputs.app }}.yml
